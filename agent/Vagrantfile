# -*- mode: ruby -*-
# vi: set ft=ruby :

# use:
#   $ vagrant up --provider=docker
#   $ vagrant ssh
#   guest$ cd appserver
#   guest$ grunt
#
# Port 3000 is exposed on the host system, so access the vm using:
#   http://127.0.0.1:3000

require 'socket'

VAGRANTFILE_API_VERSION = "2"
#VAGRANT_DEFAULT_PROVIDER = "docker"  # see bashrc

MYUID = Process.uid
MYGID = Process.gid

H=Socket.gethostname
IP=Socket.ip_address_list.find { |ai| ai.ipv4? && !ai.ipv4_loopback? }.ip_address

MASTERHOST = "#{H}:#{IP}"
#print "MASTERHOST=#{MASTERHOST}"

UBUNTU_PROVISION = "export DEBIAN_FRONTEND=noninteractive; \
sed -i 's?vagrant:x:[0-9]*:?vagrant:x:#{MYGID}:?' /etc/group && \
sed -i 's?vagrant:x:[0-9]*:[0-9]*::/home/vagrant:/bin/bash?vagrant:x:#{MYUID}:#{MYGID}::/home/vagrant:/bin/bash?' /etc/passwd && \
chown -R #{MYUID}:#{MYGID} /home/vagrant && \
apt-get update && \
apt-get upgrade -y; \
apt-get install -y sysstat; \
curl -sL https://deb.nodesource.com/setup_5.x | sudo -E bash -; \
apt-get install -y nodejs; \
"
#apt-get install -y build-essential; # disabled to ensure pure-javascript in agent

CENTOS_PROVISION = "yum clean all && yum swap -y fakesystemd systemd && \
yum update -y && \
yum install -y net-tools; \
curl --silent --location https://rpm.nodesource.com/setup_5.x | bash -; \
yum install -y nodejs;
echo -e 'export TERM=vt100\nexport LANG=C\nexport LC_ALL=C' > /etc/profile.d/dockenv.sh; \
"
#yum -y install -y gcc-c++ make; # disabled to ensure pure-javascript in agent

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.usable_port_range = 2300..2350
  config.vm.provider "docker"

  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.synced_folder ".", "/opt/partout", mount_options: ["ro"]   # ro is being ignored vagrant-1.7.2/1.8.1

  config.vm.define "ubuntu14", primary: true do |u14|
    u14.vm.provision "shell", inline: UBUNTU_PROVISION
    u14.vm.provider "docker" do |d|
      d.image = "gbevan/vagrant-ubuntu-dev:trusty"
      #d.pull = true
      d.has_ssh = true
      d.create_args = ['--add-host', MASTERHOST]
    end
  end

  config.vm.define "centos7", primary: true do |c7|
    c7.vm.provision "shell", inline: CENTOS_PROVISION
    c7.vm.provider "docker" do |d|
      d.image = "gbevan/vagrant-centos-dev:centos7"
      #d.pull = true
      d.has_ssh = true
      d.create_args = ['--add-host', MASTERHOST]
    end
  end

end
