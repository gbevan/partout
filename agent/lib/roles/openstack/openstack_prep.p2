/*
    Partout [Everywhere] - Policy-Based Configuration Management for the
    Data-Driven-Infrastructure.

    Copyright (C) 2016 Graham Lee Bevan <graham.bevan@ntlworld.com>

    This file is part of Partout.

    Partout is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

/*jslint node: true, nomen: true */
'use strict';
/*global p2*/

// make parent node_modules available to sync'd manifest
module.paths = module.paths.concat(module.parent.paths);

var path = require('path'),
    utils = p2.require('utils'),
    pfs = p2.require('pfs'),
    fs = require('fs'),
    u = require('util'),
    Q = require('q'),
    heredoc = require('heredoc'),
    uuid = require('uuid'),
    console = require('better-console');

p2

///////////////
// All nodes
//.node(true)
//.node(function (f) { return f.os_family === 'debian'; })


//.package('ntp')
//.service('ntp', {
//  enabled: true,
//  ensure: 'running'
//})
//
//.package('debconf-utils')

/**
 * @module openstack_prepare_virt_host
 *
 * @description
 * Role: openstack_prepare_virt_host
 * ================
 * ```javascript
 * .openstack_prepare_virt_host()
 * ```
 */
.role('openstack_prepare_virt_host', {
  p2: function (title, opts) {
    p2
    .node(function (f) {
      return f.os_dist_id === 'ubuntu' && p2.hasClass('openstack_virt_host');
    })
    .package('aptitude')
    .package('openssh-server')
    .package('ethtool')
    .package('bridge-utils')
    .package('qemu-kvm')
    .package('libvirt-bin')
    .package('virtinst')
    .package('uvtool')
    .package('uvtool-libvirt')
    .package('traceroute')

//    .file('/etc/default/grub', {
//      content: {file: path.join(__dirname, 'files', 'default_grub.template')}
//    })

    ;

  }
})

/**
 * @module openstack_prep_node
 *
 * @description
 * Role: openstack_prep_node
 * ================
 * ```javascript
 * .openstack_prep_node('prep', {
 *   openstack_version: 'mitaka'
 * })
 * ```
 */
.role('openstack_prep_node', {
  p2: function (title, opts) {
    //console.info('Preparing node for OpenStack...');
    p2
    .node(function (f) {
      utils.dlog('>>> f.os_dist_id:', f.os_dist_id, 'hasClass openstack_node:', p2.hasClass('openstack_node'));
      utils.dlog('>>> agent_classes:', f.agent_classes);
      return f.os_dist_id === 'ubuntu' && p2.hasClass('openstack_node');
    })

    .package('aptitude')
    .package('ntp')
    .service('ntp', {
      enabled: true,
      ensure: 'running'
    })

    .package('debconf-utils')
    .package('lvm2')

    .package('sysstat')
    .str_replace_infile('/etc/default/sysstat', {
      regex: /^\s*ENABLED\s*=\s*"false"\s*$/mg,
      with: 'ENABLED="true"'
    })

    .command('prep_for_openstack', {
      cmd: heredoc.strip(function () {/*
      export DEBIAN_FRONTEND="noninteractive";
      export APT_LISTBUGS_FRONTEND="none";
      export APT_LISTCHANGES_FRONTEND="none";
      apt-get install -yq software-properties-common && \
      add-apt-repository cloud-archive:{{ opts.parms.openstack_version }} && \
      apt-get update && apt-get -yq dist-upgrade && \
      apt-get install -yq python-openstackclient && \
      apt-get install python-pip -y && \
      touch /.prep_for_openstack
      */}),
      creates: '/.prep_for_openstack',
      parms: {
        openstack_version: (opts && opts.openstack_version ? opts.openstack_version : 'newton')
      }
    })
    ;
  }
})

;
